#question 3
from collections import Counter

def findLHS(nums):
    counter = Counter(nums)  # Count the frequency of each number in the array
    longest_subsequence = 0
    
    for num in counter:
        if num + 1 in counter:
            current_length = counter[num] + counter[num + 1]
            longest_subsequence = max(longest_subsequence, current_length)
            #print(longest_subsequence, current_length)
    
    return longest_subsequence

# Test the function
nums = [1, 3, 2, 2, 5, 2, 3, 7]
print(findLHS(nums))  # Output: 5

#TC - O(n)
#SC - o(n)
